<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.springframework.boot</groupId>
    <artifactId>spring-boot-starter-parent</artifactId>
    <version>2.3.2.RELEASE</version>
    <relativePath/> <!-- lookup parent from repository -->
  </parent>
  <groupId>com.seven</groupId>
  <artifactId>event</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <name>event</name>
  <description>Demo project for Spring Boot</description>

  <properties>
    <java.version>1.8</java.version>
    <docker-maven-plugin.version>0.4.13</docker-maven-plugin.version>
    <docker.registry>hanyao94</docker.registry>
    <docker.registry.url>hub.docker.com/repositories</docker.registry.url>
  </properties>

  <dependencies>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-web</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-data-jdbc</artifactId>
    </dependency>

    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
      <optional>true</optional>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-test</artifactId>
      <scope>test</scope>
      <exclusions>
        <exclusion>
          <groupId>org.junit.vintage</groupId>
          <artifactId>junit-vintage-engine</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <!-- 数据存储 -->
    <dependency>
      <groupId>mysql</groupId>
      <artifactId>mysql-connector-java</artifactId>
      <version>8.0.18</version>
    </dependency>
    <dependency>
      <groupId>com.alibaba</groupId>
      <artifactId>druid-spring-boot-starter</artifactId>
      <version>1.1.20</version>
    </dependency>

    <!-- aroma -->
    <dependency>
      <groupId>com.searly.aroma.commons</groupId>
      <artifactId>aroma-commons-mini</artifactId>
      <version>2.0.0</version>
    </dependency>
    <dependency>
      <groupId>com.searly.aroma.commons</groupId>
      <artifactId>aroma-commons-biz</artifactId>
      <version>2.0.1</version>
    </dependency>
    <dependency>
      <groupId>com.searly.aroma.commons</groupId>
      <artifactId>aroma-commons-jdbc</artifactId>
      <version>2.0.0</version>
    </dependency>

    <!-- swagger -->
    <dependency>
      <groupId>io.springfox</groupId>
      <artifactId>springfox-swagger2</artifactId>
      <version>2.9.2</version>
    </dependency>

    <dependency>
      <groupId>io.springfox</groupId>
      <artifactId>springfox-swagger-ui</artifactId>
      <version>2.9.2</version>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <plugin>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
      </plugin>
    </plugins>
  </build>

  <distributionManagement>
    <repository>
      <id>releases</id>
      <url>http://searly.asuscomm.com:8036/repository/maven-releases</url>
    </repository>
    <snapshotRepository>
      <id>snapshots</id>
      <url>http://searly.asuscomm.com:8036/repository/maven-snapshots</url>
    </snapshotRepository>
  </distributionManagement>

  <profiles>
    <profile>
      <id>deploy</id>
      <activation>
        <property>
          <name>deploy</name>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-deploy-plugin</artifactId>
            <configuration>
              <skip>false</skip>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>docker</id>
      <activation>
        <property>
          <name>docker</name>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>com.spotify</groupId>
            <artifactId>docker-maven-plugin</artifactId>
            <version>${docker-maven-plugin.version}</version>
            <configuration>
              <serverId>hanyao94-dockerhub</serverId>
              <registryUrl>https://${docker.registry.url}</registryUrl>
            </configuration>
            <executions>
              <execution>
                <id>build-image</id>
                <phase>package</phase>
                <goals>
                  <goal>build</goal>
                </goals>
                <configuration>
                  <dockerDirectory>${project.basedir}/src/main/docker</dockerDirectory>
                  <imageName>${docker.registry}/${project.artifactId}</imageName> <!-- 镜像名 -->
                  <imageTags>
                    <imageTag>${project.version}</imageTag>  <!-- 镜像tag，支持多个tag -->
                  </imageTags>
                  <forceTags>true</forceTags>
                  <labels>
                    <label>VERSION=${project.version}</label>
                  </labels>
                  <resources>
                    <resource>
                      <targetPath>/</targetPath>
                      <directory>${project.build.directory}</directory>
                      <include>${project.build.finalName}.jar
                      </include> <!-- 将制品添加到docker build context -->
                    </resource>
                  </resources>
                </configuration>
              </execution>
              <execution>
                <id>push-image</id>
                <phase>deploy</phase>
                <goals>
                  <goal>push</goal>
                </goals>
                <configuration>
                  <serverId>hanyao94-dockerhub</serverId>
                  <imageName>${docker.registry}/${project.artifactId}:${project.version}</imageName><!-- 需要push到仓库的镜像，目前只支持一个 -->
                  <registryUrl>https://${docker.registry.url}</registryUrl>
                  <retryPushCount>3</retryPushCount>
                  <retryPushTimeout>60</retryPushTimeout>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>

  </profiles>

</project>
